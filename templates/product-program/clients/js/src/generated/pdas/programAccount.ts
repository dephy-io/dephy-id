/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  getAddressEncoder,
  getProgramDerivedAddress,
  getUtf8Encoder,
  type Address,
  type ProgramDerivedAddress,
} from '@solana/web3.js';

export type ProgramAccountSeeds = {
  /** The authority of the program account */
  authority: Address;
  /** The mapped DePHY ID product account of the program */
  productMint: Address;
};

export async function findProgramAccountPda(
  seeds: ProgramAccountSeeds,
  config: { programAddress?: Address | undefined } = {}
): Promise<ProgramDerivedAddress> {
  const {
    programAddress = '8QFRWuQBMgkGrQFQAbHBRhXVw8BUGBLK5FJ4jiJWuu8G' as Address<'8QFRWuQBMgkGrQFQAbHBRhXVw8BUGBLK5FJ4jiJWuu8G'>,
  } = config;
  return await getProgramDerivedAddress({
    programAddress,
    seeds: [
      getUtf8Encoder().encode('Program'),
      getAddressEncoder().encode(seeds.authority),
      getAddressEncoder().encode(seeds.productMint),
    ],
  });
}
