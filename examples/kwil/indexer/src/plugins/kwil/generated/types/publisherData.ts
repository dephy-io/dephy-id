/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  Codec,
  Decoder,
  Encoder,
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
} from '@solana/web3.js';

export type PublisherData = { bump: number; ethAddress: Array<number> };

export type PublisherDataArgs = PublisherData;

export function getPublisherDataEncoder(): Encoder<PublisherDataArgs> {
  return getStructEncoder([
    ['bump', getU8Encoder()],
    ['ethAddress', getArrayEncoder(getU8Encoder(), { size: 20 })],
  ]);
}

export function getPublisherDataDecoder(): Decoder<PublisherData> {
  return getStructDecoder([
    ['bump', getU8Decoder()],
    ['ethAddress', getArrayDecoder(getU8Decoder(), { size: 20 })],
  ]);
}

export function getPublisherDataCodec(): Codec<
  PublisherDataArgs,
  PublisherData
> {
  return combineCodec(getPublisherDataEncoder(), getPublisherDataDecoder());
}
