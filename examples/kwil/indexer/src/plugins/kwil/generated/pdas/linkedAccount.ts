/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  Address,
  ProgramDerivedAddress,
  ReadonlyUint8Array,
  getAddressEncoder,
  getBytesEncoder,
  getProgramDerivedAddress,
  getUtf8Encoder,
} from '@solana/web3.js';

export type LinkedAccountSeeds = {
  /** The user pubkey */
  user: Address;
  /** ETH address */
  ethAddress: ReadonlyUint8Array;
};

export async function findLinkedAccountPda(
  seeds: LinkedAccountSeeds,
  config: { programAddress?: Address | undefined } = {}
): Promise<ProgramDerivedAddress> {
  const {
    programAddress = '7TPUtQM5UNdMSEPEgGEY5HpLJZhK9tbK4SG4wmTcSkKn' as Address<'7TPUtQM5UNdMSEPEgGEY5HpLJZhK9tbK4SG4wmTcSkKn'>,
  } = config;
  return await getProgramDerivedAddress({
    programAddress,
    seeds: [
      getUtf8Encoder().encode('LINKED'),
      getAddressEncoder().encode(seeds.user),
      getBytesEncoder().encode(seeds.ethAddress),
    ],
  });
}
