{"version":3,"sources":["../../env-shim.ts","../../test/create.test.ts"],"names":[],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;ACAA;AAAA,EAEE;AAAA,EACA;AAAA,OACK;AACP,OAAO,UAAU;AACjB;AAAA,EAEE;AAAA,EACA;AAAA,OACK;AACP;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACK;AAhBP;AAAA;AAAA;AAkBA,SAAK,oCAAoC,OAAO,MAAM;AAEpD,YAAM,SAAS,0BAA0B;AACzC,YAAM,YAAY,MAAM,6BAA6B,MAAM;AAG3D,YAAM,WAAW,MAAM,0BAA0B,EAAE,UAAU,CAAC;AAC9D,YAAM;AAAA,QACJ,MAAM,yBAAyB,QAAQ,SAAS;AAAA,QAChD,CAAC,OAAO,oCAAoC,UAAU,EAAE;AAAA,QACxD,CAAC,OAAO,uBAAuB,QAAQ,EAAE;AAAA,MAC3C;AAGA,YAAM,UAAU,MAAM,sBAAsB,OAAO,KAAK;AAAA,QACtD,WAAW,UAAU;AAAA,MACvB,CAAC;AACD,QAAE,KAAK,SAA2B;AAAA,QAChC,MAAM;AAAA,UACJ,WAAW,UAAU;AAAA,UACrB,OAAO;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAAA;AAAA","sourcesContent":["// Clever obfuscation to prevent the build system from inlining the value of `NODE_ENV`\nexport const __DEV__ = /* @__PURE__ */ (() =>\n  (process as any)['en' + 'v'].NODE_ENV === 'development')();\n","import {\n  Account,\n  appendTransactionMessageInstruction,\n  pipe,\n} from '@solana/web3.js';\nimport test from 'ava';\nimport {\n  Counter,\n  fetchCounterFromSeeds,\n  getCreateInstructionAsync,\n} from '../src';\nimport {\n  createDefaultSolanaClient,\n  createDefaultTransaction,\n  generateKeyPairSignerWithSol,\n  signAndSendTransaction,\n} from './_setup';\n\ntest('it creates a new counter account', async (t) => {\n  // Given an authority key pair with some SOL.\n  const client = createDefaultSolanaClient();\n  const authority = await generateKeyPairSignerWithSol(client);\n\n  // When we create a new counter account.\n  const createIx = await getCreateInstructionAsync({ authority });\n  await pipe(\n    await createDefaultTransaction(client, authority),\n    (tx) => appendTransactionMessageInstruction(createIx, tx),\n    (tx) => signAndSendTransaction(client, tx)\n  );\n\n  // Then we expect the counter account to exist and have a value of 0.\n  const counter = await fetchCounterFromSeeds(client.rpc, {\n    authority: authority.address,\n  });\n  t.like(counter, <Account<Counter>>{\n    data: {\n      authority: authority.address,\n      value: 0,\n    },\n  });\n});\n"]}