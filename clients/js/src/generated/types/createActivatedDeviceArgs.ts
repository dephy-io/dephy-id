/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getTupleDecoder,
  getTupleEncoder,
  getU32Decoder,
  getU32Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/web3.js';

export type CreateActivatedDeviceArgs = {
  name: string;
  uri: string;
  additionalMetadata: Array<readonly [string, string]>;
};

export type CreateActivatedDeviceArgsArgs = CreateActivatedDeviceArgs;

export function getCreateActivatedDeviceArgsEncoder(): Encoder<CreateActivatedDeviceArgsArgs> {
  return getStructEncoder([
    ['name', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['uri', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    [
      'additionalMetadata',
      getArrayEncoder(
        getTupleEncoder([
          addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder()),
          addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder()),
        ])
      ),
    ],
  ]);
}

export function getCreateActivatedDeviceArgsDecoder(): Decoder<CreateActivatedDeviceArgs> {
  return getStructDecoder([
    ['name', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['uri', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    [
      'additionalMetadata',
      getArrayDecoder(
        getTupleDecoder([
          addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder()),
          addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder()),
        ])
      ),
    ],
  ]);
}

export function getCreateActivatedDeviceArgsCodec(): Codec<
  CreateActivatedDeviceArgsArgs,
  CreateActivatedDeviceArgs
> {
  return combineCodec(
    getCreateActivatedDeviceArgsEncoder(),
    getCreateActivatedDeviceArgsDecoder()
  );
}
