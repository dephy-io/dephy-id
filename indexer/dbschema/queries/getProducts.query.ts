// GENERATED by @edgedb/generate v0.5.3

import type {Executor} from "edgedb";

export type GetProductsArgs = {
  readonly "offset": number;
  readonly "limit": number;
};

export type GetProductsReturns = Array<{
  "mint_account": string;
  "mint_authority": string | null;
  "device_count": number;
  "metadata": {
    "name": string | null;
    "additional": Array<[string, string]>;
    "symbol": string | null;
    "uri": string;
  } | null;
  "vendor": {
    "pubkey": string;
  };
}>;

export function getProducts(client: Executor, args: GetProductsArgs): Promise<GetProductsReturns> {
  return client.query(`\
select default::Product {
  mint_account,
  mint_authority,
  device_count := count(.devices),
  metadata: {
    name,
    additional,
    symbol,
    uri
  },
  vendor: {
    pubkey
  }
}
order by .tx.slot then .tx@ix_index
offset <int64>$offset
limit <int64>$limit`, args);

}
